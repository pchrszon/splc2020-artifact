#!/usr/bin/env bash

# Extract various model statistics from PRISM log files generated by bench.sh script.
# The results are written to the file 'results.csv'.
#
# Usage: results.sh <MAX_SIZE> <MAX_FILES>
#   - use the same arguments that have been used when executing the bench.sh script

set -eu


BUILD_DIR=build/bench
LOG_DIR=logs
RESULTS=results.csv


MAX_SIZE=$1
MAX_FILES=$2
RUNS=3


CMD_CONSTR='/construction: .* seconds/ {print $5}'
CMD_CHECK='/checking: .* seconds/ {print $5}'
CMD_NODES='/matrix: .* nodes/ {print $3}'
CMD_STATES='/States: .*/ {print $2}'


echo "nodes; files; lines; states; nodes; construction; checking" > "$RESULTS"

for s in $(seq 2 "$MAX_SIZE"); do
    for f in $(seq 1 "$MAX_FILES"); do
        model="$BUILD_DIR/${s}_${f}.prism"
        if [[ -f "$model" ]]; then
            logfile="$LOG_DIR/${s}_${f}.1.log"

            lines=$(wc -l "$model" | cut -d' ' -f1)
            states=$(awk "$CMD_STATES" "$logfile")
            nodes=$(awk "$CMD_NODES" "$logfile")

            runs=0
            constr_acc="0.0"
            check_acc="0.0"

            for r in $(seq 1 "$RUNS"); do
                logfile="$LOG_DIR/${s}_${f}.${r}.log"
                if [[ -f "$logfile" ]]; then
                    runs=$((runs + 1))

                    constr=$(awk "$CMD_CONSTR" "$logfile")
                    constr_acc="${constr_acc} + ${constr}"

                    check=$(awk "$CMD_CHECK" "$logfile" | paste -s -d+)
                    check_acc="${check_acc} + (${check})"
                fi
            done

            constr=$(echo "scale=3; (${constr_acc}) / ${runs}" | bc | awk '{printf "%.3f", $0}')
            check=$(echo "scale=3; (${check_acc}) / ${runs}" | bc | awk '{printf "%.3f", $0}')

            echo "${s};" "${f};" "${lines};" "${states};" "${nodes};" "${constr};" "${check}" >> "$RESULTS"
            fi
    done
done
